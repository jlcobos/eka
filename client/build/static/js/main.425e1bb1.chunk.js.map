{"version":3,"sources":["app-history.js","components/Layout/Nav/index.js","AppState/Forms/index.js","AppState/Forms/Signup/signupForm1.js","AppState/Forms/Signup/signupForm2.js","AppState/Forms/Signup/signupForm3.js","AppState/Forms/Validation.js","AppState/index.js","components/Stepper/index.js","components/Form/TextInput/index.js","components/Form/index.js","views/Signup/index.js","views/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","Nav","AppBar","position","Toolbar","Typography","variant","forms","signupForm1","formName","formElements","id","name","displayName","inputType","value","required","validationType","minLength","maxLength","valid","errorMessage","signupForm2","getFormValues","firstName","this","find","e","lastName","telephoneNumber","bind","signupForm3","validationMessages","streetAddress","city","state","zip","validate","form","errors","map","input","isEmpty","isEmail","length","isNumeric","isValid","AppState","React","createContext","AppStateProvider","handleFormSubmit","Validation","setState","handleOnChange","target","formElement","test","console","log","fetch","method","headers","body","JSON","stringify","userName","password","email","then","res","parse","Provider","props","children","Component","useStyles","makeStyles","theme","menuButton","marginRight","spacing","FormStepper","classes","useContext","useState","activeStep","setActiveStep","handleBack","prevActiveStep","Stepper","orientation","i","Step","key","StepLabel","StepContent","style","marginTop","Button","color","className","onClick","TextInput","TextField","label","type","fullWidth","onChange","error","helperText","Form","card","maxWidth","margin","Signup","Card","CardContent","gutterBottom","component","Home","to","App","Container","fixed","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.425e1bb1.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\nconst history = createBrowserHistory();\nexport default history;","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nexport default function Nav(){\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\">\n                EKA\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}","import { signupForm1 } from \"./Signup/signupForm1\";\nimport { signupForm2 } from \"./Signup/signupForm2\";\nimport { signupForm3 } from \"./Signup/signupForm3\";\n\nconst forms = {\n    signupForm1,\n    signupForm2,\n    signupForm3,\n}\n\nexport default forms;","export const signupForm1 = {\n    formName: \"signupForm1\",\n\n    formElements: [\n        {\n            id: \"signupUserName\",\n            name: \"userName\",\n            displayName: \"User Name\",\n            inputType: \"text\",\n            value: \"\",\n            required: true,\n            validationType: \"text\",\n            minLength: 1,\n            maxLength: 40,\n            valid: true,\n            errorMessage: \"\",\n        },\n        {\n            id: \"signupEmail\",\n            name: \"email\",\n            displayName: \"Email\",\n            inputType: \"email\",\n            value: \"\",\n            required: true,\n            validationType: \"email\",\n            minLength: false,\n            maxLength: 100,\n            valid: true,\n            errorMessage: \"\",\n        },\n        {\n            id: \"signupPassword\",\n            name: \"password\",\n            displayName: \"Password\",\n            inputType: \"password\",\n            value: \"\",\n            required: true,\n            validationType: \"text\",\n            minLength: 8,\n            maxLength: 16,\n            valid: true,\n            errorMessage: \"\",\n        },\n    ]\n}","export const signupForm2 = {\n    formName: \"signupForm2\",\n\n    formElements: [\n        {\n            id: \"signupFirstName\",\n            name: \"firstName\",\n            displayName: \"First Name\",\n            inputType: \"text\",\n            value: \"\",\n            required: true,\n            validationType: \"text\",\n            minLength: false,\n            maxLength: false,\n            valid: true,\n            errorMessage: \"\",\n        },\n        {\n            id: \"signupLastName\",\n            name: \"lastName\",\n            displayName: \"Last Name\",\n            inputType: \"text\",\n            value: \"\",\n            required: true,\n            validationType: \"text\",\n            minLength: false,\n            maxLength: false,\n            valid: true,\n            errorMessage: \"\",\n        },\n        {\n            id: \"signupTelephoneNumber\",\n            name: \"telephoneNumber\",\n            displayName: \"Phone Number\",\n            inputType: \"text\",\n            value: \"\",\n            required: true,\n            validationType: \"numeric\",\n            minLength: 10,\n            maxLength: 10,\n            valid: true,\n            errorMessage: \"\",\n        },\n    ],\n\n    getFormValues: getFormValues.bind(this),\n}\n\nfunction getFormValues(){\n    return {\n        firstName: this.formElements.find(e => e.name === \"firstName\").value,\n        lastName: this.formElements.find(e => e.name === \"lastName\").value,\n        telephoneNumber: this.formElements.find(e => e.name === \"telephoneNumber\").value,\n    }\n}","export const signupForm3 = {\n    formName: \"signupForm3\",\n\n    formElements: [\n        {\n            id: \"signupStreetAddress\",\n            name: \"streetAddress\",\n            displayName: \"Street Address\",\n            inputType: \"text\",\n            value: \"\",\n            required: true,\n            validationType: \"text\",\n            minLength: false,\n            maxLength: false,\n            valid: true,\n            validationMessages: {\n                required: () => `Street Adress Required`,\n            }\n        },\n        {\n            id: \"signupCity\",\n            name: \"city\",\n            displayName: \"City\",\n            inputType: \"text\",\n            value: \"\",\n            required: true,\n            validationType: \"text\",\n            minLength: false,\n            maxLength: false,\n            valid: true,\n            validationMessages: {\n                required: () =>  `City Required`,\n            }\n        },\n        {\n            id: \"signupState\",\n            name: \"state\",\n            displayName: \"State\",\n            inputType: \"text\",\n            value: \"\",\n            required: true,\n            validationType: \"text\",\n            minLength: false,\n            maxLength: false,\n            valid: true,\n            validationMessages: {\n                required: () => `State Required`,\n            }\n        },\n        {\n            id: \"signupZip\",\n            name: \"zip\",\n            displayName: \"Zip Code\",\n            inputType: \"text\",\n            value: \"\",\n            required: true,\n            validationType: \"numeric\",\n            minLength: 5,\n            maxLength: 10,\n            valid: true,\n            validationMessages: {\n                required: () => `Zip Code Required`,\n            }\n        },\n    ],\n\n    getFormValues: getFormValues.bind(this),\n}\n\nfunction getFormValues(){\n    return {\n        streetAddress: this.formElements.find(e => e.name === \"streetAddress\").value,\n        city: this.formElements.find(e => e.name === \"city\").value,\n        state: this.formElements.find(e => e.name === \"state\").value,\n        zip: this.formElements.find(e => e.name === \"zip\").value,\n    }\n}","import isEmail from 'validator/lib/isEmail';\nimport isEmpty from 'validator/lib/isEmpty';\nimport isNumeric from 'validator/lib/isNumeric';\n\nfunction validate(form){\n    let errors = 0;\n    form.formElements = form.formElements.map(input => {\n\n        let { value, required, inputType, displayName, minLength, maxLength, validationType} = input;\n\n        input.valid = true;\n\n        if (required && isEmpty(value)) {\n            input.valid = false;\n            input.errorMessage = `${displayName} Required`\n            errors++;\n            return input;\n        } else if (inputType === \"email\" && !isEmail(value)) {\n            input.valid = false;\n            input.errorMessage = `Please Enter a Valid Email`\n            errors++;\n        } else if ((value.length < minLength || value.length > maxLength) && minLength !== maxLength) {\n            input.valid = false;\n            errors++;\n            input.errorMessage = `${displayName} must be ${minLength} to ${maxLength} characters/digits`\n        } else if ( value.length < minLength && minLength === maxLength) {\n            input.valid = false;\n            errors++;\n            input.errorMessage = `${displayName} must be ${minLength} characters`\n        }  \n        if (validationType === \"numeric\" && !isNumeric(value)) {\n            input.valid = false;\n            errors++;\n            input.errorMessage = `${displayName} can only contain numbers`;\n        }\n        return input;\n    });\n    if (errors === 0) return { isValid: true, form }\n    else return {isValid: false, form};\n}\n\nexport default validate;","import React from \"react\";\nimport forms from \"./Forms\";\nimport Validation from \"./Forms/Validation\";\n\n\nexport const AppState = React.createContext();\n\nexport class AppStateProvider extends React.Component {\n\n    state = {\n        forms\n    }\n\n    handleFormSubmit = (formName) => {\n        const {isValid, form} = Validation({...this.state.forms[formName]});\n\n        this.setState({[formName]: form})\n\n        return isValid;\n    }\n\n    handleOnChange = (e, formName) => {\n        const { name, value } = e.target;\n        const form = {...this.state.forms[formName]};\n\n        form.formElements.find(formElement => formElement.name === name).value = value;\n\n        this.setState({[formName]: form});\n    }\n\n\n    test = () => {\n        console.log(\"test\");\n        const data = {\n            userName: \"userName\",\n            firstName: \"firstName\",\n            lastName: \"lastName\",\n            password: \"password\",\n            email: \"email\",\n            telephoneNumber: \"telephoneNumber\",\n            streetAddress: \"streetAddress\",\n            city: \"city\",\n            state: \"tate\",\n            zip: \"zip\",\n        }\n        fetch(\"http://localhost:8080/api/new-user\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),    \n        }).then(res => JSON.parse(res)).then(res => console.log(res));\n    }\n\n    render(){\n        this.test();\n        return (\n            <AppState.Provider value={{\n                forms: this.state.forms,\n                handleOnChange: this.handleOnChange,\n                handleFormSubmit: this.handleFormSubmit,\n                }} \n            >\n                {this.props.children}\n            </AppState.Provider>\n        )\n    }\n}","import React, { useContext } from \"react\";\nimport { Stepper, Step, StepLabel, StepContent, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppState } from \"../../AppState\";\n\nconst useStyles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport default function FormStepper({forms}) {\n    const classes = useStyles();\n\n    const { handleFormSubmit } = useContext(AppState)\n\n    const [activeStep, setActiveStep] = React.useState(0);\n\n    const handleNext = (formName) => {\n        const success = handleFormSubmit(formName)\n        if(success) setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n    const handleEnd = (formName) => {\n        const success = handleFormSubmit(formName);\n        if(success) setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    return (\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n            {forms.map((form, i) => {\n                return (\n                    <Step key={i}>\n                        <StepLabel></StepLabel>\n                        <StepContent>\n                            {form.form}\n                            {form.formName !== \"success\" ? \n                                <div style={{marginTop: 16}} >\n                                    {activeStep < forms.length -1 ? <Button variant=\"contained\" color=\"primary\" className={classes.menuButton} onClick={() => handleNext(form.formName)}>SAVE & Next</Button> : null}\n                                    {activeStep === forms.length -1 ? <Button variant=\"contained\" color=\"primary\" className={classes.menuButton} onClick={() => handleEnd(form.formName)}>Finish</Button> : null}\n                                    {activeStep > 0 ? <Button variant=\"contained\" color=\"secondary\" className={classes.menuButton} onClick={handleBack}>Go Back</Button> : null}\n                                </div>\n                                :\n                                null\n                            }\n                        </StepContent>\n                    </Step>\n                ) \n            })}\n        </Stepper>\n    )\n}","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\n\nexport default function TextInput({input: { id, name, displayName, inputType, value, valid, errorMessage }, formName, handleOnChange,}){\n    return <TextField \n        id={id}\n        name={name}\n        label={displayName}\n        type={inputType}\n        fullWidth\n        value={value}\n        onChange={(e) => handleOnChange(e,formName)}\n        error={!valid}\n        helperText={valid ? \"\" : errorMessage }\n        />\n}","import React, { useContext } from \"react\";\nimport { AppState } from \"../../AppState\";\nimport TextInput from \"./TextInput\";\n\nexport default function Form({formName}){\n\n    const { forms, handleOnChange } = useContext(AppState);\n    return (\n        <form>\n            {forms[formName].formElements.map(formElement => {\n                switch (formElement.inputType) {\n                    case \"text\":\n                    case \"email\":\n                        return <TextInput key={formElement.name} input={formElement} handleOnChange={handleOnChange} formName={formName}/>;\n                    case \"password\":\n                        return <TextInput key={formElement.name} input={formElement} handleOnChange={handleOnChange} formName={formName}/>;\n                    default: \n                        return null;\n                }\n            })}\n        </form>\n    )\n}","import React from \"react\";\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormStepper from \"../../components/Stepper\";\nimport Form from \"../../components/Form\";\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 700,\n        margin: \"24px auto\"\n    },\n});\n\nexport default function Signup(){\n    const classes = useStyles();\n\n    const forms = [\n    {formName: \"signupForm1\" , form: <Form formName={\"signupForm1\"}/>},\n    {formName: \"signupForm2\" , form: <Form formName={\"signupForm2\"}/>},\n    {formName: \"signupForm3\" , form: <Form formName={\"signupForm3\"}/>},\n    {formName: \"success\" , form: <p>All Done!</p>},\n    ];\n\n    return (\n        <Card className={classes.card} variant=\"outlined\">\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Signup\n                </Typography>\n                <FormStepper forms={forms} />\n            </CardContent>\n        </Card>\n    )\n}","import React from \"react\";\nimport { Card, CardContent, Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 700,\n        margin: \"24px auto\"\n    },\n});\n\nexport default function Home(){\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card} variant=\"outlined\">\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Home\n                </Typography>\n                <Button variant=\"contained\" color=\"primary\">\n                    <NavLink className=\"nav-link\" to={\"signup\"}>Signup</NavLink> \n                </Button>\n            </CardContent>\n        </Card>\n    )\n}","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from \"./app-history\";\nimport Nav from \"./components/Layout/Nav\";\nimport Signup from \"./views/Signup\";\nimport Home from \"./views/Home\";\nimport { AppStateProvider  } from \"./AppState\";\nimport Container from '@material-ui/core/Container';\nimport './CSS/App.css';\n\nfunction App() {\n  return (\n    <Router  history={history}>\n      <Nav />\n      <Container fixed>\n        <AppStateProvider>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/signup\" component={Signup} />\n          </Switch>\n        </AppStateProvider>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}